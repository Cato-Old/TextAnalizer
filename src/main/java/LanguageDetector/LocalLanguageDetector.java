package LanguageDetector;import java.util.*;import java.util.AbstractMap.*;import java.util.stream.Collectors;import java.util.stream.Stream;import static java.lang.Math.pow;public class LocalLanguageDetector implements LanguageDetector {    private List<Map<Character,Double>> languageMaps = new ArrayList<>();    private List<String> languageLabels = new ArrayList<>();    public LocalLanguageDetector() {        populateLists();    }    @Override    public String detect(Map<Character, Double> charsMap) {        List<Double> languageErrors = languageMaps.stream()                .map(x -> x.entrySet().stream()                        .map(y -> pow(charsMap.get(y.getKey()) - y.getValue(), 2))                        .reduce(Double::sum)                        .orElseThrow(IllegalArgumentException::new))                .collect(Collectors.toList());        int indexOfMinError = languageErrors.indexOf(Collections.min(languageErrors));        return languageLabels.get(indexOfMinError);    }    private void populateLists(){        languageLabels.add("Polish");        languageMaps.add(Stream.of(                new SimpleEntry<>('a', 0.1050), new SimpleEntry<>('b', 0.0174), new SimpleEntry<>('c', 0.0390),                new SimpleEntry<>('d', 0.0373), new SimpleEntry<>('e', 0.0735), new SimpleEntry<>('f', 0.0014),                new SimpleEntry<>('g', 0.0173), new SimpleEntry<>('h', 0.0102), new SimpleEntry<>('i', 0.0832),                new SimpleEntry<>('j', 0.0184), new SimpleEntry<>('k', 0.0275), new SimpleEntry<>('l', 0.0256),                new SimpleEntry<>('m', 0.0252), new SimpleEntry<>('n', 0.0624), new SimpleEntry<>('o', 0.0667),                new SimpleEntry<>('p', 0.0245), new SimpleEntry<>('q', 0.0000), new SimpleEntry<>('r', 0.0524),                new SimpleEntry<>('s', 0.0522), new SimpleEntry<>('t', 0.0246), new SimpleEntry<>('u', 0.0206),                new SimpleEntry<>('v', 0.0001), new SimpleEntry<>('w', 0.0581), new SimpleEntry<>('x', 0.0000),                new SimpleEntry<>('y', 0.0321), new SimpleEntry<>('z', 0.0485))                                 .collect(Collectors.toMap(SimpleEntry::getKey,SimpleEntry::getValue)));        languageLabels.add("English");        languageMaps.add(Stream.of(                new SimpleEntry<>('a', 0.0817), new SimpleEntry<>('b', 0.0149), new SimpleEntry<>('c', 0.0278),                new SimpleEntry<>('d', 0.0425), new SimpleEntry<>('e', 0.1270), new SimpleEntry<>('f', 0.0223),                new SimpleEntry<>('g', 0.0202), new SimpleEntry<>('h', 0.0609), new SimpleEntry<>('i', 0.0697),                new SimpleEntry<>('j', 0.0015), new SimpleEntry<>('k', 0.0377), new SimpleEntry<>('l', 0.0403),                new SimpleEntry<>('m', 0.0241), new SimpleEntry<>('n', 0.0675), new SimpleEntry<>('o', 0.0751),                new SimpleEntry<>('p', 0.0193), new SimpleEntry<>('q', 0.0010), new SimpleEntry<>('r', 0.0599),                new SimpleEntry<>('s', 0.0633), new SimpleEntry<>('t', 0.0906), new SimpleEntry<>('u', 0.0276),                new SimpleEntry<>('v', 0.0098), new SimpleEntry<>('w', 0.0536), new SimpleEntry<>('x', 0.0015),                new SimpleEntry<>('y', 0.0197), new SimpleEntry<>('z', 0.0007))                                 .collect(Collectors.toMap(SimpleEntry::getKey,SimpleEntry::getValue)));    }}