package Analyzer;import java.util.Map;import java.util.stream.Collectors;public class CharFrequencyAnalyzer implements Analyzer<Map<Character,Double>>{    @Override    public Map<Character, Double> analyze(String text) {        Map<Character,Long> map = text                .replaceAll("[\\W\\d]","")                .toLowerCase()                .chars()                .mapToObj(x->(char) x)                .collect(Collectors.groupingBy(x -> x, Collectors.counting()));        long allCharCount = map                .values()                .stream()                .mapToLong(x -> x)                .sum();        return map                .keySet()                .stream()                .collect(Collectors.toMap(x->x,x -> Math.round((map.get(x) * 1.0 / allCharCount)*10000d)/10000d));    }    @Override    public String analyzeWithFormattedOutput(String text) {        return "Frequency characters in text: " + analyze(text).toString();    }}